services:
  # Nuxt.js Application
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: agent-ai-app
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - MONGODB_URI=${MONGODB_URI}
      - QDRANT_URL=http://qdrant:6333
      - JWT_SECRET=${JWT_SECRET}
      - APP_NAME=${APP_NAME:-Agent AI Server}
      - LOG_LEVEL=${LOG_LEVEL:-info}
      - CHATWOOT_URL=${CHATWOOT_URL:-}
      - CHATWOOT_API_TOKEN=${CHATWOOT_API_TOKEN:-}
      - FRONTEND_URL=${FRONTEND_URL:-}
      - DOMAIN_NAME=${DOMAIN_NAME:-}
      - NODE_OPTIONS=--max-old-space-size=3072
    depends_on:
      - mongodb
      - qdrant
    volumes:
      - huggingface_cache:/app/.output/server/node_modules/@xenova/transformers/.cache
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: agent-ai-mongodb
    restart: unless-stopped
    user: "999:999"
    security_opt:
      - no-new-privileges:true
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_ROOT_USER}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_ROOT_PASSWORD}
      - MONGO_INITDB_DATABASE=agent-ai-server
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d:ro
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Qdrant Vector Database Service
  qdrant:
    image: qdrant/qdrant:latest
    container_name: agent-ai-qdrant
    security_opt:
      - no-new-privileges:true
    volumes:
      - qdrant_data:/qdrant/storage
    environment:
      - QDRANT__SERVICE__HTTP_PORT=6333
      - QDRANT__SERVICE__GRPC_PORT=6334
      - QDRANT__LOG_LEVEL=INFO
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:6333/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: agent-ai-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./docker/nginx/ssl:/etc/nginx/ssl:ro
      - nginx_logs:/var/log/nginx:Z
    depends_on:
      - app
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  app-network:
    driver: bridge

volumes:
  qdrant_data:
    driver: local
  mongodb_data:
    driver: local
  nginx_logs:
    driver: local
  huggingface_cache:
    driver: local 